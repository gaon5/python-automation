{"name": "test_order_flow[case3]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 67 (char 66)", "trace": "case = {'Test Case ID': '004_add to cart', 'Test Case Title': 'Add to cart', 'Priority': 'P1', 'Method': 'POST', ...}\n\n    @pytest.mark.parametrize(\"case\", case_all)\n    def test_order_flow(case):\n    \n>       resp = api_request(case)\n\ntestcases\\test_order_flow.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\handle_api_request.py:31: in api_request\n    param = json.loads(param)\nD:\\Python3.9\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nD:\\Python3.9\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000025355D3AE20>\ns = '{\"basketId\": 0, \"count\": 1, \"prodId\": 5069, \"shopId\": 1, \"skuId\": #skuId#}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 67 (char 66)\n\nD:\\Python3.9\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "case", "value": "{'Test Case ID': '004_add to cart', 'Test Case Title': 'Add to cart', 'Priority': 'P1', 'Method': 'POST', 'URL': 'http://shop.lemonban.com:8107/p/shopCart/changeItem', 'Headers': '{\"Content-Type\":\"application/json\",\"Accept-Language\":\"zh\",\"Authorization\": \"#token_type##access_token#\"}', 'Parameters': '{\"basketId\": 0, \"count\": 1, \"prodId\": #prodId#, \"shopId\": 1, \"skuId\": #skuId#}', 'Expected Result': None, 'Variable Extracted': None, 'Sql Extracted': None, 'Database Assertion': None, None: None}"}], "start": 1738041949404, "stop": 1738041949408, "uuid": "2c397db1-8fd1-4fe5-b714-8791f74abd09", "historyId": "4a4742398cbbd25c8d3fd4d7dd64ab63", "testCaseId": "826dd1907fb1eb32f1edf4bf2ebee24b", "fullName": "testcases.test_order_flow#test_order_flow", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_order_flow"}, {"name": "host", "value": "summer"}, {"name": "thread", "value": "21308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_order_flow"}]}